##
## sample kubic-init configuration file
##
apiVersion: kubic.suse.com/v1alpha2
kind: KubicInitConfiguration
# features:
#   PSP: true
# runtime:
#   engine: crio
# certificates:
#   # where certificates are stored
#   directory: /etc/kubernetes/pki
#   # a caCrt can be used for verifying the identity of the seeder
#   caCrt:
#   # (or we can use the "hash" of the ca.crt instead)
#   caCrtHash:
# clusterFormation:
#   # the seeder for the cluster formation
#   # when no seeder is specified, this node will be the seeder
#   seeder: some-node.com
#   # token for both discovery-token and tls-bootstrap-token
#   token: 94dcda.c271f4ff502789ca
#   # nodes with the right token will be automatically approved
#   autoApprove: false
#   autoYAST:
#     port: 8080
#     path: /
#     # use the token as a password. nodes must provide it as a parameter, i.e.:
#     # http://this-ip:8080/?secret=94dcda.c271f4ff502789ca
#     protected: true
#     template: /etc/kubic-init/autoyast.xml.in
# network:
#   bind:
#     # bind to a specific IP address (will be automatically detected when not provided)
#     address: 0.0.0.0
#     # ... or get the IP address from an interface
#     interface: eth0
#   podSubnet: "172.16.0.0/13"
#   serviceSubnet: "172.24.0.0/16"
#   proxy:
#     http: my-proxy.com:8080
#     https: my-proxy.com:8080
#     noProxy: localdomain.com
#     systemwide: false
#   dns:
#     domain: someDomain.local
#     externalFqdn: some.name.com
#   cni:
#     driver: flannel
#     image: registry.opensuse.org/devel/caasp/kubic-container/container/kubic/flannel:0.9.1
# services:
#   dex:
#     nodePort: 32000
#     ldap:
#       - name: some-name
#         id: some-id
#         server: https://somewhere
#         bindDn:
#         bindPW:
#         usernamePrompt:
#         rootCAData:
#         user::
#           baseDN:
#           filter:
#           attrMap:
#             username:
#             id:
#             email:
#             name:
#         group::
#           baseDN:
#           filter:
#           attrMap::
#             user:
#             group:
#             name:
