# save this file to /etc/systemd/system/kubic-init.service

[Unit]
Description=Kubic Initialization Container
After=crio.service docker.service

# Check if the kubic-init.yaml configuration file exists
# if it doesn't, just skip this service...
ConditionPathExists=/etc/kubic/kubic-init.yaml

[Service]
TimeoutStartSec=0
RestartSec=30

Restart=always
SyslogIdentifier=kubic-init

# TODO: see https://www.freedesktop.org/software/systemd/man/systemd.unit.html#OnFailure=
# OnFailure=kubic-init-reset.service

# Define configuration files and don't start if they don't exist
Environment="KUBECONFIG=/etc/kubernetes/admin.conf"
Environment="KUBIC_INIT_CFG=/etc/kubic/kubic-init.yaml"

EnvironmentFile=-/etc/sysconfig/kubic-init

ExecStartPre=-/bin/sh -c '${KUBIC_INIT_RUNNER} stop kubic-init >/dev/null 2>&1'
ExecStartPre=-/bin/sh -c '${KUBIC_INIT_RUNNER} rm   kubic-init >/dev/null 2>&1'

ExecStart=/bin/sh -c '${KUBIC_INIT_RUNNER} run --rm \
                      ${KUBIC_INIT_RUNNER_ARGS} \
                      ${KUBIC_INIT_RUNNER_VOLS} \
                      ${KUBIC_INIT_IMAGE} \
                      kubic-init bootstrap --v ${KUBIC_INIT_DEBUGLEVEL} \
                                           --config=${KUBIC_INIT_CFG} \
                                           ${KUBIC_INIT_EXTRA_ARGS}'

[Install]
WantedBy=multi-user.target
